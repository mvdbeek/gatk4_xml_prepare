<?xml version="1.0"?>
<tool id="gatk4_mergevcfs" name="GATK4 MergeVcfs (Picard)" version="@WRAPPER_VERSION@0" profile="17.09">

    <description>- Combines multiple variant files into a single variant file</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements"/>
    <expand macro="version_cmd"/>

    <command detect_errors="exit_code"><![CDATA[
        #include source=$vcf_tabix#

        @CMD_BEGIN@ MergeVcfs
        
        #include source=$picard_opts#
        #include source=$picard_vcf_output_opts#
        #include source=$vcf_input#
        #include source=$picard_ref_opts#
        #include source=$picard_seqdict_opts#

    ]]></command>

    <inputs>
        <expand macro="picard_vcf_params" />
        <param name="input" argument="--INPUT" type="data" optional="false" format="vcf,vcf_bgzip" label="Input" help="VCF or BCF input files (File format is determined by file extension), or a file having a &apos;.list&apos; suffix containing the path to the files, one per line." />
        <section name="optional" title="Optional Parameters" expanded="False">

            <expand macro="ref_sel" />
            <expand macro="seq_dict_sel" />
        </section>
        <expand macro="picard_params" />
    </inputs>

    <outputs>
        <expand macro="picard_vcf_output_params" />
        <expand macro="picard_output_params" />

    </outputs>

    <tests>
    </tests>

    <help><![CDATA[
    Combines multiple variant files into a single variant file.

Inputs
~~~~~~

-  One or more input file in VCF format (can be gzipped, i.e. ending in
   ".vcf.gz", or binary compressed, i.e. ending in ".bcf").
-  Optionally a sequence dictionary file (typically name ending in
   .dict) if the input VCF does not contain a complete contig list and
   if the output index is to be created (true by default).

The input variant data must adhere to the following rules:

-  If there are samples, those must be the same across all input files.
-  Input file headers must be contain compatible declarations for common
   annotations (INFO, FORMAT fields) and filters.
-  Input files variant records must be sorted by their contig and
   position following the sequence dictionary provided or the header
   contig list.

You can either directly specify the list of files by specifying
``INPUT`` multiple times, or provide a list in a file with name ending
in ".list" to ``INPUT``.

Outputs
~~~~~~~

A VCF sorted (i) according to the dictionary and (ii) by coordiante.

Usage examples
~~~~~~~~~~~~~~

Example 1:
^^^^^^^^^^

We combine several variant files in different formats, where at least
one of them contains the contig list in its header.

::

        java -jar picard.jar MergeVcfs \
             I=input_variants.01.vcf \
             I=input_variants.02.vcf.gz \
             O=output_variants.vcf.gz
    

Example 2:
^^^^^^^^^^

Similar to example 1 but we use an input list file to specify the input
files:

::

        java -jar picard.jar MergeVcfs \
             I=input_variant_files.list \
             O=output_variants.vcf.gz
    

    ]]></help>

    <expand macro="citations"/>

</tool>
